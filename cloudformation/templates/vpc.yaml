Description: Create a VPC with 2 public subnets and 2 private subnets
Parameters:
    EnvironmentName:
        Type: String
        Description: An environment name to be prefixed to resources
    VpcCIDR:
        Type: String
        Default: 10.10.0.0/16
        Description: The IP range (CIDR notation) for the VPC
    PublicSubnet1CIDR:
        Type: String
        Default: 10.10.10.0/24
        Description: The IP range for the first public subnet
    PublicSubnet2CIDR:
        Type: String
        Default: 10.10.11.0/24
        Description: The IP range for the second public subnet
    PrivateSubnet1CIDR:
        Type: String
        Default: 10.10.20.0/24
        Description: The IP range for the first private subnet
    PrivateSubnet2CIDR:
        Type: String
        Default: 10.10.21.0/24
        Description: The IP range for the second private subnet
Resources:
    VPC:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    InternetGatewayAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
    PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select
                - 0
                - !GetAZs ''
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Public-Subnet-1'
    PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select
                - 1
                - !GetAZs ''
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Public-Subnet-2'
    PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select
                - 0
                - !GetAZs ''
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Private-Subnet-1'
    PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select
                - 1
                - !GetAZs ''
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Private-Subnet-2'
    NatGateway1EIP:
        Type: 'AWS::EC2::EIP'
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway2EIP:
        Type: 'AWS::EC2::EIP'
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway1:
        Type: 'AWS::EC2::NatGateway'
        Properties:
            AllocationId: !GetAtt
                - NatGateway1EIP
                - AllocationId
            SubnetId: !Ref PublicSubnet1
    NatGateway2:
        Type: 'AWS::EC2::NatGateway'
        Properties:
            AllocationId: !GetAtt
                - NatGateway2EIP
                - AllocationId
            SubnetId: !Ref PublicSubnet2
    PublicRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Public-Routes'
    DefaultPublicRoute:
        Type: 'AWS::EC2::Route'
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
    PublicSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1
    PublicSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2
    PrivateRouteTable1:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Private-Routes-1'
    DefaultPrivateRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1
    PrivateSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1
    PrivateRouteTable2:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub '${EnvironmentName}-Private-Routes-2'
    DefaultPrivateRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2
    PrivateSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2
Outputs:
    VPC:
        Description: VPC ID
        Value: !Ref VPC
        Export:
            Name: !Join
                - ':'
                - - !Ref 'AWS::StackName'
                  - VPC
    PublicSubnets:
        Description: The public subnet IDs
        Value: !Join
            - ','
            - - !Ref PublicSubnet1
              - !Ref PublicSubnet2
    PrivateSubnets:
        Description: The private subnet IDs
        Value: !Join
            - ','
            - - !Ref PrivateSubnet1
              - !Ref PrivateSubnet2
    PublicSubnet1:
        Description: Public Subnet 1
        Value: !Ref PublicSubnet1
    PublicSubnet2:
        Description: Public Subnet 2
        Value: !Ref PublicSubnet2
    PrivateSubnet1:
        Description: Private Subnet 1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Join
                - ':'
                - - !Ref 'AWS::StackName'
                  - PrivateSubnet1
    PrivateSubnet2:
        Description: Private Subnet 2
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Join
                - ':'
                - - !Ref 'AWS::StackName'
                  - PrivateSubnet2
